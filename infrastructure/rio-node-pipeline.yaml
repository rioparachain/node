AWSTemplateFormatVersion: "2010-09-09"
Mappings:
  General:
    VpcId:
      nonprod: vpc-082b5fd3017aecc1c
    Subnet:
      nonprod: subnet-0dc08ca24c0b7f595
    SecurityGroupId:
      nonprod: sg-0eeb5bea7180af22d
    ArtifactAccessPolicy:
      nonprod: arn:aws:iam::061416964074:policy/non-prod-artifact-access-policy
    Repository:
      name: rio-node
      branch: develop
    Account:
      nonprod: 061416964074

Resources:
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: rio-node-pipeline
      RoleArn: arn:aws:iam::061416964074:role/rio-node-pipeline-role
      ArtifactStores:
        - ArtifactStore:
            Type: S3
            Location: rio-artifacts-us-east-1
            EncryptionKey:
              Type: 'KMS'
              Id: 'arn:aws:kms:us-east-1:061416964074:key/76b00609-4add-4c06-8aac-d8c129e8d229'
          Region: us-east-1
        - ArtifactStore:
              Type: S3
              Location: rio-artifacts-us-west-2
              EncryptionKey:
                  Type: 'KMS'
                  Id: 'arn:aws:kms:us-west-2:061416964074:key/e31312f9-1ed9-48cd-bed3-2ba780675984'
          Region: us-west-2
        - ArtifactStore:
              Type: S3
              Location: rio-artifacts-eu-central-1
              EncryptionKey:
                  Type: 'KMS'
                  Id: 'arn:aws:kms:eu-central-1:061416964074:key/71f754aa-84bc-4a14-9b16-e8226ff0e06d'
          Region: eu-central-1
      Stages:
        - Name: Source
          Actions:
            - Name: RioNodeSource
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeCommit
                Version: '1'
              RunOrder: 1
              Configuration:
                #BranchName: !FindInMap [General, Repository, branch]
                BranchName: develop
                PollForSourceChanges: 'false'
                #RepositoryName: !FindInMap [General, Repository, name]
                RepositoryName: rio-node
                # Source action can only use output artifact format CODEBUILD_CLONE_REF when artifact is used by CodeBuild
                #OutputArtifactFormat: "CODEBUILD_CLONE_REF"
              OutputArtifacts:
                - Name: SourceArtifact
              InputArtifacts: []
              Region: us-east-1
        - Name: BuildSource
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              RunOrder: 1
              Configuration:
                ProjectName: RioNodeNonProd
              OutputArtifacts:
                - Name: BuildArtifact
              InputArtifacts:
                - Name: SourceArtifact
              Region: us-east-1
        - Name: DeployTestnet1
          Actions:
            - Name: RelayTestnet1
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              InputArtifacts:
                - Name: SourceArtifact
                - Name: BuildArtifact
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: "CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND"
                ParameterOverrides: !Sub |
                  {
                    "ImageURI" : { "Fn::GetParam" : ["BuildArtifact", "imageDetails.json", "ImageURI"] },
                    "AppName": "rio-testnet",
                    "Stage": "relay",
                    "Env": "us-east-1",
                    "Vpc": "vpc-082b5fd3017aecc1c",
                    "PublicSubnets": "subnet-08f0d859c38c420a4,subnet-04defa35f908744ef",
                    "PrivateSubnets": "subnet-0dc08ca24c0b7f595,subnet-034aa02bf03954706",
                    "SecurityGroups": "sg-0eeb5bea7180af22d",
                    "HostedZone": "riocorenetwork.com",
                    "DesiredCount": "3"
                  }
                # NOTE: desired count will be multiplied x2 because of splitting to WS/RPC task-sets
                StackName: rio-testnet-relay
                TemplatePath: SourceArtifact::infrastructure/deploy-relay.yml
                RoleArn:  arn:aws:iam::061416964074:role/rio-node-pipeline-role
              RunOrder: 1
              Region: us-east-1
            - Name: CollatorTestnet1
              ActionTypeId:
                  Category: Deploy
                  Owner: AWS
                  Version: 1
                  Provider: CloudFormation
              InputArtifacts:
                  - Name: SourceArtifact
                  - Name: BuildArtifact
              Configuration:
                  ActionMode: CREATE_UPDATE
                  Capabilities: "CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND"
                  ParameterOverrides: !Sub |
                      {
                          "ImageURI": { "Fn::GetParam" : ["BuildArtifact", "imageDetails.json", "ImageURI"] },
                          "AppName": "rio-testnet",
                          "Stage": "collator",
                          "Env": "us-east-1",
                          "Vpc": "vpc-082b5fd3017aecc1c",
                          "PublicSubnets": "subnet-08f0d859c38c420a4,subnet-04defa35f908744ef",
                          "PrivateSubnets": "subnet-0dc08ca24c0b7f595,subnet-034aa02bf03954706",
                          "SecurityGroups": "sg-0eeb5bea7180af22d",
                          "HostedZone": "riocorenetwork.com",
                          "DesiredCount": "2"
                      }
                  # NOTE: desired count will be multiplied x2 because of splitting to WS/RPC task-sets
                  StackName: rio-testnet-collator
                  TemplatePath: SourceArtifact::infrastructure/deploy-collator.yml
                  RoleArn: arn:aws:iam::061416964074:role/rio-node-pipeline-role
              RunOrder: 1
              Region: us-east-1
        - Name: DeployTestnet2
          Actions:
            - Name: RelayTestnet2
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              InputArtifacts:
                - Name: SourceArtifact
                - Name: BuildArtifact
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: "CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND"
                ParameterOverrides: !Sub |
                  {
                    "ImageURI" : { "Fn::GetParam" : ["BuildArtifact", "imageDetails.json", "ImageURI"] },
                    "AppName": "rio-testnet",
                    "Stage": "relay2",
                    "Env": "us-west-2",
                    "Vpc": "vpc-0943bb58d3bdac0bd",
                    "PublicSubnets": "subnet-09f8872d4499eea9b,subnet-064f1db3e48770b2c",
                    "PrivateSubnets": "subnet-0a7d2c49157156f32,subnet-0b0ee2e64bc8d6ced",
                    "SecurityGroups": "sg-0ddbadfeb40fa562e",
                    "HostedZone": "riocorenetwork.com",
                    "DesiredCount": "2"
                  }
                # NOTE: desired count will be multiplied x2 because of splitting to WS/RPC task-sets
                StackName: rio-testnet-relay2
                TemplatePath: SourceArtifact::infrastructure/deploy-relay.yml
                RoleArn:  arn:aws:iam::061416964074:role/rio-node-pipeline-role
              RunOrder: 1
              Region: us-west-2
            - Name: CollatorTestnet2
              ActionTypeId:
                  Category: Deploy
                  Owner: AWS
                  Version: 1
                  Provider: CloudFormation
              InputArtifacts:
                  - Name: SourceArtifact
                  - Name: BuildArtifact
              Configuration:
                  ActionMode: CREATE_UPDATE
                  Capabilities: "CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND"
                  ParameterOverrides: !Sub |
                      {
                          "ImageURI": { "Fn::GetParam" : ["BuildArtifact", "imageDetails.json", "ImageURI"] },
                          "AppName": "rio-testnet",
                          "Stage": "collator2",
                          "Env": "us-west-2",
                          "Vpc": "vpc-0943bb58d3bdac0bd",
                          "PublicSubnets": "subnet-09f8872d4499eea9b,subnet-064f1db3e48770b2c",
                          "PrivateSubnets": "subnet-0a7d2c49157156f32,subnet-0b0ee2e64bc8d6ced",
                          "SecurityGroups": "sg-0ddbadfeb40fa562e",
                          "HostedZone": "riocorenetwork.com",
                          "DesiredCount": "1"
                      }
                  # NOTE: desired count will be multiplied x2 because of splitting to WS/RPC task-sets
                  StackName: rio-testnet-collator2
                  TemplatePath: SourceArtifact::infrastructure/deploy-collator.yml
                  RoleArn: arn:aws:iam::061416964074:role/rio-node-pipeline-role
              RunOrder: 1
              Region: us-west-2
        - Name: DeployTestnet3
          Actions:
            - Name: RelayTestnet3
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              InputArtifacts:
                - Name: SourceArtifact
                - Name: BuildArtifact
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: "CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND"
                ParameterOverrides: !Sub |
                  {
                    "ImageURI" : { "Fn::GetParam" : ["BuildArtifact", "imageDetails.json", "ImageURI"] },
                    "AppName": "rio-testnet",
                    "Stage": "relay3",
                    "Env": "eu-central-1",
                    "Vpc": "vpc-002e3744979dcbe0c",
                    "PublicSubnets": "subnet-0f16ba565a805f39e,subnet-054052093c2550ea1",
                    "PrivateSubnets": "subnet-09110bcd62dbd2417,subnet-0e47ea8178c04a7db",
                    "SecurityGroups": "sg-03f24db84a7a4bc0c",
                    "HostedZone": "riocorenetwork.com",
                    "DesiredCount": "1"
                  }
                # NOTE: desired count will be multiplied x2 because of splitting to WS/RPC task-sets
                StackName: rio-testnet-relay3
                TemplatePath: SourceArtifact::infrastructure/deploy-relay.yml
                RoleArn:  arn:aws:iam::061416964074:role/rio-node-pipeline-role
              RunOrder: 1
              Region: eu-central-1
            - Name: CollatorTestnet3
              ActionTypeId:
                  Category: Deploy
                  Owner: AWS
                  Version: 1
                  Provider: CloudFormation
              InputArtifacts:
                - Name: SourceArtifact
                - Name: BuildArtifact
              Configuration:
                  ActionMode: CREATE_UPDATE
                  Capabilities: "CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND"
                  ParameterOverrides: !Sub |
                      {
                          "ImageURI": { "Fn::GetParam" : ["BuildArtifact", "imageDetails.json", "ImageURI"] },
                          "AppName": "rio-testnet",
                          "Stage": "collator3",
                          "Env": "eu-central-1",
                          "Vpc": "vpc-002e3744979dcbe0c",
                          "PublicSubnets": "subnet-0f16ba565a805f39e,subnet-054052093c2550ea1",
                          "PrivateSubnets": "subnet-09110bcd62dbd2417,subnet-0e47ea8178c04a7db",
                          "SecurityGroups": "sg-03f24db84a7a4bc0c",
                          "HostedZone": "riocorenetwork.com",
                          "DesiredCount": "1"
                      }
                  # NOTE: desired count will be multiplied x2 because of splitting to WS/RPC task-sets
                  StackName: rio-testnet-collator3
                  TemplatePath: SourceArtifact::infrastructure/deploy-collator.yml
                  RoleArn: arn:aws:iam::061416964074:role/rio-node-pipeline-role
              RunOrder: 1
              Region: eu-central-1


  DeployTestnet:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: RioNodeNonProd
      Artifacts:
        Type: CODEPIPELINE
      VpcConfig:
        VpcId: !FindInMap [General, VpcId, nonprod]
        Subnets:
          - !FindInMap [General, Subnet, nonprod]
        SecurityGroupIds:
          - !FindInMap [General, SecurityGroupId, nonprod]
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_2XLARGE
#        ComputeType: BUILD_GENERAL1_MEDIUM
#        ComputeType: BUILD_GENERAL1_LARGE
        Image: aws/codebuild/standard:5.0
# The requested image's platform (linux/amd64) does not match the detected host platform (linux/arm64/v8) and no specific platform was requested
#        Type: ARM_CONTAINER
#        ComputeType: BUILD_GENERAL1_LARGE
#        Image: aws/codebuild/amazonlinux2-aarch64-standard:2.0
        PrivilegedMode: true
        EnvironmentVariables:
          - Name: REPOSITORY_NAME
            Type: PLAINTEXT
            Value: !FindInMap [General, Repository, name]
          - Name: REPOSITORY_BRANCH
            Type: PLAINTEXT
            Value: !FindInMap [General, Repository, branch]
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Source:
        Type: CODEPIPELINE
        BuildSpec: infrastructure/buildspec.yml
      Cache:
        Type: S3
        Location: rio-artifacts-us-east-1/rio-node-codebuild-cache
        Modes:
          - LOCAL_CUSTOM_CACHE
          - LOCAL_DOCKER_LAYER_CACHE
          #- LOCAL_SOURCE_CACHE
      TimeoutInMinutes: 60

  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: rio-node-pipeline-CodeBuildRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - sts:AssumeRole
            Principal:
              Service:
                - codebuild.amazonaws.com
      Policies:
        - PolicyName: RioCodeBuildPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                    - 'codecommit:GitPull'
                Resource:
                    #- !Sub arn:aws:codecommit:us-east-1:061416964074:rio-node
                    #- !Join [ '', [ 'arn:aws:codecommit:us-east-1:061416964074:', !FindInMap [General, Repository, name] ] ]
                    - !Join [ '', [ 'arn:aws:codecommit:us-east-1:', !FindInMap [General, Account, nonprod], ':', !FindInMap [General, Repository, name] ] ]
              - Effect: "Allow"
                Action:
                  - logs:*
                  - ec2:CreateNetworkInterface
                  - ec2:DescribeDhcpOptions
                  - ec2:DescribeNetworkInterfaces
                  - ec2:DeleteNetworkInterface
                  - ec2:DescribeSubnets
                  - ec2:DescribeSecurityGroups
                  - ec2:DescribeVpcs
                  - ec2:CreateNetworkInterfacePermission
                  - codecommit:GitPull
                  - ssm:GetParameter
                  - ssm:GetParameters
#                  - ssm:GetParameterByPath
                  - cloudformation:*
                  - s3:*
                  - iam:*
                  - lambda:*
                  - acm:*
                  - route53:*
                  - apigateway:*
                  - waf:*
                  - sqs:*
                  - dynamodb:*
                  - kinesisanalytics:*
                  - kinesis:*
                  - sns:*
                  - events:*
                  - ecr:BatchCheckLayerAvailability
                  - ecr:CompleteLayerUpload
                  - ecr:GetAuthorizationToken
                  - ecr:InitiateLayerUpload
                  - ecr:PutImage
                  - ecr:UploadLayerPart
                  - ecs:*
                  - secretsmanager:GetSecretValue
                Resource: '*'
      ManagedPolicyArns:
        - !FindInMap [General, ArtifactAccessPolicy, nonprod]

  AmazonCloudWatchEventRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        -
          Effect: Allow
          Principal:
            Service:
            - events.amazonaws.com
          Action: sts:AssumeRole
      Path: /
      Policies:
      -
        PolicyName: cwe-pipeline-execution
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          -
            Effect: Allow
            Action: codepipeline:StartPipelineExecution
            Resource: !Join [ '', [ 'arn:aws:codepipeline:', !Ref 'AWS::Region', ':', !Ref 'AWS::AccountId', ':', !Ref Pipeline ] ]


  AmazonCloudWatchEventRule:
    Type: AWS::Events::Rule
    Properties:
      EventPattern:
        source:
        - aws.codecommit
        detail-type:
        - 'CodeCommit Repository State Change'
        resources:
        #- !Join [ '', [ 'arn:aws:codecommit:', !Ref 'AWS::Region', ':', !Ref 'AWS::AccountId', ':', !FindInMap [General, Repository, Name] ] ]
        - !Join [ '', [ 'arn:aws:codecommit:', !Ref 'AWS::Region', ':', !Ref 'AWS::AccountId', ':', !FindInMap [General, Repository, name] ] ]
        detail:
          event:
          - referenceCreated
          - referenceUpdated
          referenceType:
          - branch
          referenceName:
          - !FindInMap [General, Repository, branch]
      Targets:
      -
        Arn:
          !Join [ '', [ 'arn:aws:codepipeline:', !Ref 'AWS::Region', ':', !Ref 'AWS::AccountId', ':', !Ref Pipeline ] ]
        RoleArn: !GetAtt AmazonCloudWatchEventRole.Arn
        Id: codepipeline-Pipeline
