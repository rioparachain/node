--- node/src/rpc.rs.tmp
+++ node/src/rpc.rs
@@ -27,7 +27,7 @@
 use fc_rpc_core::types::{FeeHistoryCache, FeeHistoryCacheLimit, FilterPool};
 use fp_storage::EthereumStorageSchema;
 // Runtime
-use frontier_template_runtime::{opaque::Block, AccountId, Balance, Hash, Index};
+use parachain_rio_runtime::{opaque::Block, AccountId, Balance, Hash, Index};
 
 /// Full client dependencies.
 pub struct FullDeps<C, P, A: ChainApi> {
@@ -48,7 +48,7 @@
 	/// EthFilterApi pool.
 	pub filter_pool: Option<FilterPool>,
 	/// Backend.
-	pub backend: Arc<fc_db::Backend<Block>>,
+	pub frontier_backend: Arc<fc_db::Backend<Block>>,
 	/// Maximum number of logs in a query.
 	pub max_past_logs: u32,
 	/// Fee history cache.
@@ -136,7 +136,7 @@
 		enable_dev_signer,
 		network,
 		filter_pool,
-		backend,
+		frontier_backend,
 		max_past_logs,
 		fee_history_cache,
 		fee_history_cache_limit,
@@ -159,11 +159,11 @@
 			client.clone(),
 			pool.clone(),
 			graph,
-			Some(frontier_template_runtime::TransactionConverter),
+			Some(parachain_rio_runtime::TransactionConverter),
 			network.clone(),
 			signers,
 			overrides.clone(),
-			backend.clone(),
+			frontier_backend.clone(),
 			// Is authority.
 			is_authority,
 			block_data_cache.clone(),
@@ -177,7 +177,7 @@
 		io.merge(
 			EthFilter::new(
 				client.clone(),
-				backend,
+				frontier_backend,
 				filter_pool,
 				500_usize, // max stored filters
 				max_past_logs,
