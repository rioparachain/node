variables:
  DOCKER_HOST: "unix:///var/run/docker.sock"
  MNEMONIC: $MNEMONIC
  AIRDROP_SCAN_PAGES: $AIRDROP_SCAN_PAGES
  SSH_PRIVATE_KEY: $SSH_PRIVATE_KEY
  SSH_PUBLIC_KEY: $SSH_PUBLIC_KEY

stages:
  - prepare
  - patch
  - build
  - test
  - chainspec
  - clean
  - publish


prepare:
  except:
    - develop
  stage: prepare
  timeout: 60 minutes
  image:
    name: docker/compose
  services:
    - docker:dind
  before_script:
    - mkdir -p target || true
  script:
    #- test `docker images|grep polkadot|sed 's/ .*//'` = "polkadot" && echo 'build skipped' || docker-compose -f ./docker-compose-build.yml build polkadot
    - docker rmi polkadot || true
    - docker-compose -f ./docker-compose-build.yml build polkadot
    - docker build -f ./docker/cicd.Dockerfile -t cicd/$CI_PIPELINE_ID --no-cache .
    - docker run --rm -d --name=cicd-$CI_PIPELINE_ID --entrypoint='/bin/sh' cicd/$CI_PIPELINE_ID -c 'tail -f /dev/null'


patch:
  except:
    - develop
  stage: patch
  timeout: 5 minutes
  image:
    name: docker/compose
  services:
    - docker:dind
  script:
    - docker exec cicd-$CI_PIPELINE_ID nix-shell /shell.nix --run './patches_cmds/subdir_apply_all.sh .'


build:
  except:
    - develop
  stage: build
  timeout: 30 minutes
  image:
    name: docker/compose
  services:
    - docker:dind
  script:
    - docker exec cicd-$CI_PIPELINE_ID nix-shell /shell.nix --run 'cargo build --release --features fast-runtime --features rio-testnet'


test:
  except:
    - develop
  stage: test
  timeout: 30 minutes
  image:
    name: docker/compose
  services:
    - docker:dind
  script:
    - docker exec cicd-$CI_PIPELINE_ID nix-shell /shell.nix --run 'cargo test --release --features fast-runtime --features rio-testnet'


chainspec:
  except:
    - develop
  stage: chainspec
  timeout: 5 minutes
  image:
    name: docker/compose
  services:
    - docker:dind
  before_script:
    - echo "MNEMONIC -> $MNEMONIC"
    - echo "AIRDROP_SCAN_PAGES -> $AIRDROP_SCAN_PAGES"
  script:
    - export AIRDROP_SCAN_PAGES=$AIRDROP_SCAN_PAGES && export MNEMONIC=$MNEMONIC && docker-compose -f ./docker-compose-build.yml build --no-cache --build-arg IMAGE_POLKADOT=cicd/$CI_PIPELINE_ID chainspec

clean:
  except:
    - develop
  stage: clean
  timeout: 5 minutes
  image:
    name: docker/compose
  services:
    - docker:dind
  script:
    - docker container stop cicd-$CI_PIPELINE_ID
    - docker rmi --force cicd/$CI_PIPELINE_ID
#    - docker rm cicd-$CI_PIPELINE_ID

publish:
  only:
    - develop
  stage: publish
  timeout: 5 minutes
  before_script:
    - apk add git rsync openssh
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
    - echo "$SSH_PUBLIC_KEY" > ~/.ssh/id_rsa.pub
    - cat ~/.ssh/id_rsa.pub
    - eval `ssh-agent -s`
    - chmod 400 ~/.ssh/id_rsa
    - ssh-add ~/.ssh/id_rsa
    - git config --global user.email "coreteam911@icloud.com"
    - git config --global user.name "coreteam911"
  script:
    - ssh-keyscan -t rsa gitlab.com >> ~/.ssh/known_hosts
    - git clone git@gitlab.com:Core911/rio-node.git .rsync
    - rsync -rl . ./.rsync/
    - cd .rsync
    - rm -f ./docker/chainspec/airdrop.js
    - rm -f .gitlab-ci.yml
    - rm -f infrastructure
    - rm -f .database .key* .chain*
    - rm -f .git* .idea
    - rm -f tmp* aws submodules target
    - rm -f README.dev.md
    - git status
    - git log --name-status HEAD^..HEAD
    - git add .
    - git commit -am"$(date)"
    - git remote set-url origin git@gitlab.com:Core911/rio-node.git
    - git push origin develop
