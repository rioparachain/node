version: 0.2

env:
  variables:
    IMAGE_NAME: rio-node
  git-credential-helper: yes
  #secrets-manager:
  #  key: secret-id:json-key:version-stage:version-id

phases:
  pre_build:
    commands:
      - export IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-8)
      - export AWS_ACCOUNT_ID=$(echo $CODEBUILD_BUILD_ARN | awk -F":" '{print $5}')
      - export ECR_REPO=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_NAME
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
  build:
    commands:
      - echo $REPOSITORY_NAME
      - echo $REPOSITORY_BRANCH
      - git clone https://git-codecommit.us-east-1.amazonaws.com/v1/repos/$REPOSITORY_NAME .clone
      - cd .clone
      - git checkout $REPOSITORY_BRANCH
      - git log | head -10
      # cache does not work
      # - ls -lA /root/.submodules

      - docker-compose -f ./docker-compose-build.yml build --no-cache
      # OR
#      - docker-compose -f ./docker-compose-build.yml build binaries
#      - docker tag binaries $ECR_REPO:binaries
#      - docker push $ECR_REPO:binaries
#      - docker rmi $ECR_REPO:binaries
#      - docker rmi binaries
#
#      - docker pull $ECR_REPO:binaries
#      - docker tag $ECR_REPO:binaries binaries
#      - docker-compose -f ./docker-compose-build.yml build chainspec runner
  post_build:
    commands:
      - docker tag runner $ECR_REPO:$IMAGE_TAG
      - docker push $ECR_REPO:$IMAGE_TAG
      - printf '{"ImageURI":"%s:%s"}' $ECR_REPO $IMAGE_TAG > ../imageDetails.json
      # - echo '{"ImageURI":"061416964074.dkr.ecr.us-east-1.amazonaws.com/rio-node:fbc76ed7"}' > ../imageDetails.json

      # reset key distributor
      - curl http://44.202.25.232:3000/reset -o 1.txt
      - cat 1.txt
      #- cp 1.txt /root/.submodules
    finally:
      - echo "finished or errored"

artifacts:
  files:
    - imageDetails.json

cache:
  paths:
    - '/root/.npm/**/*'
    #- /root/.submodules
